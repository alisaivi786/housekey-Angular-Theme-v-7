{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2lCAA4hC,WAAW,oyEAAoyE,wCAAwC,s5BAAs5B,wCAAwC,+7BAA+7B,E;;;;;;;;;;;;ACA/vK;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtK;AACiB;AAC1B;AACiB;AAC6B;IAO1E,iBAAiB,SAAjB,iBAAiB;IAQ5B,YAAmB,EAAe,EAAS,MAAa,EAAS,QAAqB;QAAnE,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAN/E,SAAI,GAAG,IAAI,CAAC;QACZ,cAAS,GAAG;YACjB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;YACxB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;YACzB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;SACzB,CAAC;IACwF,CAAC;IAE3F,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,iFAAc,CAAC,CAAC,CAAC;YACtE,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,iBAAiB,EAAE,KAAK;SACzB,EAAC,EAAC,SAAS,EAAE,4FAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAC,CAAC,CAAC;IACnE,CAAC;IAEM,oBAAoB,CAAC,MAAa;QACvC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SAC7H;IACH,CAAC;CACF;;YArCmB,0DAAW;YACtB,sDAAM;YACN,uEAAW;;AAQP,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4LAAwC;;KAEzC,CAAC;qCASuB,0DAAW,EAAgB,sDAAM,EAAmB,uEAAW;GAR3E,iBAAiB,CA2B7B;AA3B6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AACA;AACW;AACD;AAElD,MAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,SAAS,EAAE,MAAM,EAAG;CAC/D,CAAC;IAUW,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAR1B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,qEAAiB,CAAC;QACjC,OAAO,EAAE;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,kEAAY;SACb;KACF,CAAC;GACW,cAAc,CAAI;AAAJ","file":"pages-register-register-module-es2015.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n  \\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-3\\\">\\r\\n          <mat-card [style.max-width.px]=\\\"500\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">  \\r\\n              <h1 class=\\\"uppercase\\\">Register</h1>  \\r\\n              <a mat-button routerLink=\\\"/login\\\" color=\\\"accent\\\" class=\\\"w-100\\\">Already have an account? Sign in!</a>  \\r\\n            </div>\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegisterFormSubmit(registerForm.value)\\\"> \\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">group</mat-icon>\\r\\n                    <mat-label>User type</mat-label>\\r\\n                    <mat-select placeholder=\\\"Select User Type\\\" formControlName=\\\"userType\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of userTypes\\\" [value]=\\\"type\\\">\\r\\n                            {{type.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.userType.errors?.required\\\">User type is required</mat-error>                   \\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">person</mat-icon>\\r\\n                    <mat-label>Username</mat-label>\\r\\n                    <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.username.errors?.required\\\">Username is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.username.hasError('minlength')\\\">Username isn't long enough, minimum of 6 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">email</mat-icon>\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                  <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">lock</mat-icon>\\r\\n                  <mat-label>Password</mat-label>\\r\\n                  <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"6\\\" required [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                  <mat-error *ngIf=\\\"registerForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                  <mat-error *ngIf=\\\"registerForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                  <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" type=\\\"button\\\" class=\\\"text-muted\\\">\\r\\n                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                  </button>\\r\\n                </mat-form-field> \\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                  <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">lock</mat-icon>\\r\\n                  <mat-label>Confirm Password</mat-label>\\r\\n                  <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" required [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                  <mat-error *ngIf=\\\"registerForm.controls.confirmPassword.errors?.required\\\">Confirm Password is required</mat-error>\\r\\n                  <mat-error *ngIf=\\\"registerForm.controls.confirmPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n                  <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" type=\\\"button\\\" class=\\\"text-muted\\\">\\r\\n                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                  </button>\\r\\n                </mat-form-field> \\r\\n                <mat-slide-toggle formControlName=\\\"receiveNewsletter\\\" class=\\\"my-2\\\">Receive Newsletter</mat-slide-toggle>\\r\\n                <div class=\\\"text-center mt-2\\\"> \\r\\n                    <button mat-raised-button color=\\\"accent\\\" class=\\\"uppercase\\\" type=\\\"submit\\\">\\r\\n                        Create an Account\\r\\n                    </button>\\r\\n                </div> \\r\\n            </form>\\r\\n            <div class=\\\"divider mt-4\\\"></div> \\r\\n            <mat-card-actions fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">\\r\\n               <small class=\\\"my-3\\\">By clicking the \\\"Create an Account\\\" button you agree with our <a mat-button routerLink=\\\"/terms-conditions\\\" color=\\\"primary\\\" class=\\\"mx-2\\\">Terms and conditions</a> </small>\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n      </div> \\r\\n  \\r\\n    </div>\\r\\n  </div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router'; \r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { matchingPasswords, emailValidator } from 'src/app/theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public registerForm: FormGroup;\r\n  public hide = true;\r\n  public userTypes = [\r\n    { id: 1, name: 'Agent' },\r\n    { id: 2, name: 'Agency' },\r\n    { id: 3, name: 'Buyer' }\r\n  ];\r\n  constructor(public fb: FormBuilder, public router:Router, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.fb.group({\r\n      userType: ['', Validators.required],\r\n      username: ['', Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n      receiveNewsletter: false                            \r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n  }\r\n\r\n  public onRegisterFormSubmit(values:Object):void {\r\n    if (this.registerForm.valid) {\r\n      console.log(values);\r\n      this.snackBar.open('You registered successfully!', 'Ã—', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n"],"sourceRoot":"webpack:///"}