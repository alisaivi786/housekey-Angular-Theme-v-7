{"version":3,"sources":["webpack:///src/app/pages/submit-property/submit-property.component.html","webpack:///src/app/pages/submit-property/submit-property.component.scss","webpack:///src/app/pages/submit-property/submit-property.component.ts","webpack:///src/app/pages/submit-property/submit-property.module.ts"],"names":["SubmitPropertyComponent","appService","fb","mapsAPILoader","ngZone","features","propertyTypes","propertyStatuses","cities","neighborhoods","streets","lat","lng","zoom","getFeatures","getPropertyTypes","getPropertyStatuses","getCities","getNeighborhoods","getStreets","submitForm","group","basic","title","required","desc","priceDollar","priceEuro","propertyType","propertyStatus","gallery","address","location","city","zipCode","neighborhood","street","additional","bedrooms","bathrooms","garages","area","yearBuilt","buildFeatures","media","videos","array","createVideo","plans","createPlan","additionalFeatures","createFeature","featured","setCurrentPosition","placesAutocomplete","e","selectedIndex","horizontalStepper","_steps","forEach","step","editable","console","log","value","reset","controls","get","length","removeAt","setValue","emitEvent","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","load","then","autocomplete","google","maps","places","Autocomplete","addressAutocomplete","nativeElement","types","addListener","run","place","getPlace","geometry","undefined","getAddress","subscribe","response","formatted_address","setAddresses","result","newCity","newStreet","newNeighborhood","address_components","item","indexOf","filter","name","long_name","id","push","n","cityId","neighborhoodId","arr","map","feature","selected","link","index","rooms","baths","image","selector","template","routes","path","component","pathMatch","SubmitPropertyModule","declarations","imports","forChild"],"mappings":"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","file":"pages-submit-property-submit-property-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n  \\r\\n      <mat-card ngClass.lt-lg=\\\"p-0\\\" [formGroup]=\\\"submitForm\\\">\\r\\n  \\r\\n        <mat-horizontal-stepper #horizontalStepper linear=\\\"true\\\" class=\\\"submit-property\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">\\r\\n\\r\\n            <mat-step [stepControl]=\\\"submitForm.get('basic')\\\" label=\\\"Basic\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"basic\\\" fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Basic</h1>\\r\\n                      </div>\\r\\n                              \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Title</mat-label>\\r\\n                            <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" required autocomplete=\\\"off\\\">\\r\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].title.errors?.required\\\">Title is required</mat-error>\\r\\n                        </mat-form-field>\\r\\n                      </div>  \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Description</mat-label> \\r\\n                            <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" rows=\\\"7\\\"></textarea> \\r\\n                        </mat-form-field> \\r\\n                      </div> \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Price ($)</mat-label>\\r\\n                            <input matInput placeholder=\\\"Enter sale or rent price\\\" formControlName=\\\"priceDollar\\\" autocomplete=\\\"off\\\"> \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Price (€)</mat-label>\\r\\n                            <input matInput placeholder=\\\"Enter sale or rent price\\\" formControlName=\\\"priceEuro\\\" autocomplete=\\\"off\\\"> \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Property Type</mat-label> \\r\\n                            <mat-select placeholder=\\\"Select Property Type\\\" formControlName=\\\"propertyType\\\" required>\\r\\n                                <mat-option *ngFor=\\\"let propertyType of propertyTypes\\\" [value]=\\\"propertyType\\\">\\r\\n                                    {{propertyType.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].propertyType.errors?.required\\\">Property Type is required</mat-error>                               \\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Property Status</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select Property Status\\\" formControlName=\\\"propertyStatus\\\" multiple>\\r\\n                                <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus\\\">\\r\\n                                    {{propertyStatus.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>                             \\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\r\\n                          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Gallery</span><span class=\\\"text-muted mx-3\\\">(max 8 images)</span></p>  \\r\\n                          <input-file formControlName=\\\"gallery\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"></input-file>  \\r\\n                      </div> \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\r\\n                          <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                      </div> \\r\\n                  \\r\\n                  </form>\\r\\n               \\r\\n              </div>\\r\\n            </mat-step>\\r\\n            \\r\\n            <mat-step [stepControl]=\\\"submitForm.get('address')\\\" label=\\\"Address\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"address\\\" fxLayout=\\\"row wrap\\\">\\r\\n            \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Address</h1>\\r\\n                      </div>\\r\\n                                \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">location_on</mat-icon>\\r\\n                            <mat-label>Location</mat-label>\\r\\n                            <input matInput placeholder=\\\"Enter a location\\\" formControlName=\\\"location\\\" autocomplete=\\\"off\\\" #addressAutocomplete> \\r\\n                            <button *ngIf=\\\"submitForm.get('address')['controls'].location.value\\\" mat-button matSuffix mat-icon-button (click)=\\\"submitForm.get('address')['controls'].location.setValue(null)\\\" type=\\\"button\\\">\\r\\n                              <mat-icon>close</mat-icon>\\r\\n                            </button>\\r\\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].location.errors?.required\\\">Location is required</mat-error>   \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2 mb-4\\\">\\r\\n                          <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\" (mapClick)=\\\"onMapClick($event)\\\">\\r\\n                              <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=\\\"true\\\" (markerClick)=\\\"onMarkerClick($event)\\\"></agm-marker>\\r\\n                          </agm-map>\\r\\n                      </div>\\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>City</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select City...\\\" formControlName=\\\"city\\\" (selectionChange)=\\\"onSelectCity()\\\" required> \\r\\n                              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city\\\">\\r\\n                                {{city.name}}\\r\\n                              </mat-option>\\r\\n                            </mat-select> \\r\\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].city.errors?.required\\\">City is required</mat-error>                    \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Zip Code</mat-label>\\r\\n                            <input matInput placeholder=\\\"exp. 98104\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Neighborhood</mat-label>\\r\\n                          <mat-select placeholder=\\\"Select Neighborhood...\\\" formControlName=\\\"neighborhood\\\" multiple (selectionChange)=\\\"onSelectNeighborhood()\\\">\\r\\n                            <mat-option *ngFor=\\\"let neighborhood of neighborhoods | filterNeighborhoods: submitForm.get('address')['controls'].city.value?.id\\\" [value]=\\\"neighborhood\\\">\\r\\n                              {{neighborhood.name}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>   \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Street</mat-label>\\r\\n                          <mat-select placeholder=\\\"Select Street...\\\" formControlName=\\\"street\\\" multiple> \\r\\n                            <mat-option *ngFor=\\\"let street of streets | filterStreets : { neighborhoods: submitForm.get('address')['controls'].neighborhood.value?.id, cityId:submitForm.get('address')['controls'].city.value?.id } \\\" [value]=\\\"street\\\">\\r\\n                              {{street.name}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>  \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <mat-icon>navigate_before</mat-icon>\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Back</span>  \\r\\n                        </button>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\r\\n                          <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                      </div>  \\r\\n                    \\r\\n                  </form>\\r\\n                \\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n            <mat-step [stepControl]=\\\"submitForm.get('additional')\\\" label=\\\"Additional\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"additional\\\" fxLayout=\\\"row wrap\\\">\\r\\n    \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Additional</h1>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Bedrooms</mat-label>\\r\\n                            <input matInput placeholder=\\\"bedrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bedrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Bathrooms</mat-label>\\r\\n                            <input matInput placeholder=\\\"bathrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bathrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Garages</mat-label>\\r\\n                            <input matInput placeholder=\\\"Garages\\\" autocomplete=\\\"off\\\" formControlName=\\\"garages\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                      \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Area (ft²)</mat-label>\\r\\n                            <input matInput placeholder=\\\"Area\\\" autocomplete=\\\"off\\\" formControlName=\\\"area\\\" onlyNumber>                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                      \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Year Built</mat-label>\\r\\n                            <input matInput placeholder=\\\"Year Built\\\" autocomplete=\\\"off\\\" formControlName=\\\"yearBuilt\\\" onlyNumber  maxlength=\\\"4\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\r\\n                          <p class=\\\"uppercase m-2 fw-500\\\">Features</p> \\r\\n                          <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\r\\n                              <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of submitForm.get('additional')['controls'].features['controls']; index as i\\\" class=\\\"p-2\\\">\\r\\n                                  <mat-checkbox formControlName=\\\"selected\\\">{{features[i].name}}</mat-checkbox>                         \\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <mat-icon>navigate_before</mat-icon>\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Back</span>  \\r\\n                        </button>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Next</span>                    \\r\\n                          <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                      </div>  \\r\\n                  \\r\\n                  \\r\\n                  </form>\\r\\n                  \\r\\n                \\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n            <mat-step [stepControl]=\\\"submitForm.get('media')\\\" label=\\\"Media\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"media\\\" fxLayout=\\\"row wrap\\\">    \\r\\n                   \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Media</h1>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n                          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Videos</span><span class=\\\"text-muted mx-3\\\">(video link to .mp4)</span></p>                            \\r\\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addVideo()\\\" matTooltip=\\\"Add New Video\\\" matTooltipPosition=\\\"after\\\">\\r\\n                              <mat-icon>add_circle</mat-icon>\\r\\n                          </button>\\r\\n                      </div> \\r\\n                      <div formArrayName=\\\"videos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].videos['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Name</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Video name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                                  </mat-form-field>\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Link</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Link to video\\\" formControlName=\\\"link\\\" autocomplete=\\\"off\\\">     \\r\\n                                  </mat-form-field>                                                 \\r\\n                              </div>\\r\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVideo(i)\\\" matTooltip=\\\"Delete Video\\\">\\r\\n                                      <mat-icon>cancel</mat-icon>\\r\\n                                  </button>\\r\\n                              </div>                            \\r\\n                          </div>        \\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n                          <p class=\\\"uppercase fw-500 mb-0\\\">Plans</p>                            \\r\\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addPlan()\\\" matTooltip=\\\"Add New Plan\\\" matTooltipPosition=\\\"after\\\" class=\\\"mx-3\\\">\\r\\n                              <mat-icon>add_circle</mat-icon>\\r\\n                          </button>\\r\\n                      </div> \\r\\n                      <div formArrayName=\\\"plans\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].plans['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\r\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Name</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Plan name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                                  </mat-form-field>\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Desc</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" autocomplete=\\\"off\\\">     \\r\\n                                  </mat-form-field> \\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Area (ft²)</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                                  </mat-form-field>\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Rooms</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Rooms\\\" formControlName=\\\"rooms\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                                  </mat-form-field>\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Baths</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Baths\\\" formControlName=\\\"baths\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                                  </mat-form-field>\\r\\n                                  <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">  \\r\\n                                      <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>  \\r\\n                                  </div>                \\r\\n                              </div>\\r\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deletePlan(i)\\\" matTooltip=\\\"Delete Plan\\\">\\r\\n                                      <mat-icon>cancel</mat-icon>\\r\\n                                  </button>\\r\\n                              </div>  \\r\\n                          </div>        \\r\\n                      </div> \\r\\n                  \\r\\n                      \\r\\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n                          <p class=\\\"mb-0 uppercase fw-500\\\">Additional features</p>                            \\r\\n                          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addFeature()\\\" matTooltip=\\\"Add New Feature\\\" matTooltipPosition=\\\"after\\\">\\r\\n                              <mat-icon>add_circle</mat-icon>\\r\\n                          </button>\\r\\n                      </div> \\r\\n                      <div formArrayName=\\\"additionalFeatures\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n                          <div *ngFor=\\\"let item of submitForm.get('media')['controls'].additionalFeatures['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n                              <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                              <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Name</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Feature name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                                  </mat-form-field>\\r\\n                                  <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                                      <mat-label>Value</mat-label>\\r\\n                                      <input matInput placeholder=\\\"Feature value\\\" formControlName=\\\"value\\\" autocomplete=\\\"off\\\">     \\r\\n                                  </mat-form-field>                                                 \\r\\n                              </div>\\r\\n                              <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                                  <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteFeature(i)\\\" matTooltip=\\\"Delete Feature\\\">\\r\\n                                      <mat-icon>cancel</mat-icon>\\r\\n                                  </button>\\r\\n                              </div>                            \\r\\n                          </div>        \\r\\n                      </div>\\r\\n                  \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"py-3\\\">\\r\\n                          <mat-slide-toggle formControlName=\\\"featured\\\">Featured</mat-slide-toggle>\\r\\n                      </div>\\r\\n                     \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                              <mat-icon>navigate_before</mat-icon>\\r\\n                              <span class=\\\"mx-1 uppercase\\\">Back</span>  \\r\\n                          </button>\\r\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                              <span class=\\\"mx-1 uppercase\\\">Submit</span>                    \\r\\n                              <mat-icon>navigate_next</mat-icon>\\r\\n                          </button> \\r\\n                      </div> \\r\\n                   \\r\\n                  \\r\\n                  </form>\\r\\n                \\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n            <mat-step label=\\\"Confirmation\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n                \\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-5 text-center\\\"> \\r\\n                    <button mat-fab color=\\\"primary\\\"><mat-icon>check</mat-icon></button>\\r\\n                    <h2 class=\\\"mt-3 uppercase\\\">Congratulation!</h2>\\r\\n                    <h2 class=\\\"my-3\\\">Your property <span class=\\\"primary-color\\\">\\\"{{submitForm.get('basic')['controls'].title.value}}\\\"</span> has been submitted</h2>\\r\\n                    <p class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus dolor ante, ut luctus mi faucibus a. Ut eu tincidunt neque. Proin porttitor id ligula id placerat. Integer nec nulla varius, dapibus libero quis, semper eros. Aliquam erat volutpat. Proin volutpat tellus vel purus interdum euismod.</p>\\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-3\\\">  \\r\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"reset()\\\" type=\\\"button\\\">Return to submit new property</button>       \\r\\n                  </div>\\r\\n\\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n        </mat-horizontal-stepper>\\r\\n\\r\\n      </mat-card>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N1Ym1pdC1wcm9wZXJ0eS9zdWJtaXQtcHJvcGVydHkuY29tcG9uZW50LnNjc3MifQ== */\";","/// <reference types=\"@types/googlemaps\" />\r\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { MapsAPILoader } from '@agm/core';\r\n\r\n@Component({\r\n  selector: 'app-submit-property',\r\n  templateUrl: './submit-property.component.html',\r\n  styleUrls: ['./submit-property.component.scss']\r\n})\r\nexport class SubmitPropertyComponent implements OnInit {\r\n  @ViewChild('horizontalStepper') horizontalStepper: MatStepper; \r\n  @ViewChild('addressAutocomplete') addressAutocomplete: ElementRef;\r\n  public submitForm:FormGroup; \r\n  public features = [];\r\n  public propertyTypes = [];\r\n  public propertyStatuses = [];\r\n  public cities = [];\r\n  public neighborhoods = [];\r\n  public streets = [];\r\n  public lat: number = 40.678178;\r\n  public lng: number = -73.944158;\r\n  public zoom: number = 12;  \r\n\r\n  constructor(public appService:AppService, \r\n              private fb: FormBuilder, \r\n              private mapsAPILoader: MapsAPILoader, \r\n              private ngZone: NgZone) { }\r\n\r\n  ngOnInit() {\r\n    this.features = this.appService.getFeatures();  \r\n    this.propertyTypes = this.appService.getPropertyTypes();\r\n    this.propertyStatuses = this.appService.getPropertyStatuses();\r\n    this.cities = this.appService.getCities();\r\n    this.neighborhoods = this.appService.getNeighborhoods();\r\n    this.streets = this.appService.getStreets();  \r\n\r\n    this.submitForm = this.fb.group({\r\n      basic: this.fb.group({\r\n        title: [null, Validators.required],\r\n        desc: null,\r\n        priceDollar: null,\r\n        priceEuro: null,\r\n        propertyType: [null, Validators.required],\r\n        propertyStatus: null, \r\n        gallery: null\r\n      }),\r\n      address: this.fb.group({\r\n        location: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        zipCode: '',\r\n        neighborhood: '',\r\n        street: ''\r\n      }),\r\n      additional: this.fb.group({\r\n        bedrooms: '',\r\n        bathrooms: '',\r\n        garages: '',\r\n        area: '',\r\n        yearBuilt: '',\r\n        features: this.buildFeatures()\r\n      }),\r\n      media: this.fb.group({\r\n        videos: this.fb.array([ this.createVideo() ]),\r\n        plans: this.fb.array([ this.createPlan() ]), \r\n        additionalFeatures: this.fb.array([ this.createFeature() ]),\r\n        featured: false\r\n      })\r\n    }); \r\n\r\n    this.setCurrentPosition();\r\n    this.placesAutocomplete();\r\n  }\r\n\r\n\r\n  public onSelectionChange(e:any){ \r\n    if(e.selectedIndex == 4){   \r\n      this.horizontalStepper._steps.forEach(step => step.editable = false);\r\n      console.log(this.submitForm.value);      \r\n    }\r\n  }\r\n  public reset(){\r\n    this.horizontalStepper.reset(); \r\n\r\n    const videos = <FormArray>this.submitForm.controls.media.get('videos');\r\n    while (videos.length > 1) {\r\n      videos.removeAt(0)\r\n    }\r\n    const plans = <FormArray>this.submitForm.controls.media.get('plans');\r\n    while (plans.length > 1) {\r\n      plans.removeAt(0)\r\n    }\r\n    const additionalFeatures = <FormArray>this.submitForm.controls.media.get('additionalFeatures');\r\n    while (additionalFeatures.length > 1) {\r\n      additionalFeatures.removeAt(0)\r\n    }\r\n    \r\n    this.submitForm.reset({\r\n      additional: {\r\n        features: this.features\r\n      },\r\n      media:{ \r\n        featured: false\r\n      }\r\n    });   \r\n     \r\n  }\r\n\r\n  \r\n\r\n  // -------------------- Address ---------------------------  \r\n  public onSelectCity(){\r\n    this.submitForm.controls.address.get('neighborhood').setValue(null, {emitEvent: false});\r\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\r\n  }\r\n  public onSelectNeighborhood(){\r\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false}); \r\n  }\r\n\r\n  private setCurrentPosition() {\r\n    if(\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => { \r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude; \r\n      });\r\n    }\r\n  }\r\n  private placesAutocomplete(){ \r\n    this.mapsAPILoader.load().then(() => {\r\n      let autocomplete = new google.maps.places.Autocomplete(this.addressAutocomplete.nativeElement, {\r\n        types: [\"address\"]\r\n      });\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run(() => { \r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace(); \r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          };\r\n          this.lat = place.geometry.location.lat();\r\n          this.lng = place.geometry.location.lng(); \r\n          this.getAddress();\r\n        });\r\n      });\r\n    });\r\n  } \r\n  \r\n   // public getAddress(){    \r\n  //   this.mapsAPILoader.load().then(() => {\r\n  //     let geocoder = new google.maps.Geocoder();\r\n  //     let latlng = new google.maps.LatLng(this.lat, this.lng); \r\n  //     geocoder.geocode({'location': latlng}, (results, status) => {\r\n  //       if(status === google.maps.GeocoderStatus.OK) {\r\n  //         console.log(results); \r\n  //         //this.addresstext.nativeElement.focus();  \r\n  //         let address = results[0].formatted_address; \r\n  //         this.submitForm.controls.location.setValue(address); \r\n  //         this.setAddresses(results[0]);          \r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n  public getAddress(){    \r\n    this.appService.getAddress(this.lat, this.lng).subscribe(response => {  \r\n      console.log(response);\r\n      if(response['results'].length){\r\n        let address = response['results'][0].formatted_address; \r\n        this.submitForm.controls.address.get('location').setValue(address); \r\n        this.setAddresses(response['results'][0]); \r\n      } \r\n    })\r\n  }\r\n  public onMapClick(e:any){\r\n    this.lat = e.coords.lat;\r\n    this.lng = e.coords.lng; \r\n    this.getAddress();\r\n  }\r\n  public onMarkerClick(e:any){\r\n    console.log(e);\r\n  }\r\n  \r\n  public setAddresses(result){\r\n    this.submitForm.controls.address.get('city').setValue(null);\r\n    this.submitForm.controls.address.get('zipCode').setValue(null);\r\n    this.submitForm.controls.address.get('street').setValue(null); \r\n\r\n    var newCity, newStreet, newNeighborhood;\r\n    \r\n    result.address_components.forEach(item =>{\r\n      if(item.types.indexOf('locality') > -1){  \r\n        if(this.cities.filter(city => city.name == item.long_name)[0]){\r\n          newCity = this.cities.filter(city => city.name == item.long_name)[0];\r\n        }\r\n        else{\r\n          newCity = { id: this.cities.length+1, name: item.long_name };\r\n          this.cities.push(newCity); \r\n        }\r\n        this.submitForm.controls.address.get('city').setValue(newCity);    \r\n      }\r\n      if(item.types.indexOf('postal_code') > -1){ \r\n        this.submitForm.controls.address.get('zipCode').setValue(item.long_name);\r\n      }\r\n    });\r\n\r\n    if(!newCity){\r\n      result.address_components.forEach(item =>{\r\n        if(item.types.indexOf('administrative_area_level_1') > -1){  \r\n          if(this.cities.filter(city => city.name == item.long_name)[0]){\r\n            newCity = this.cities.filter(city => city.name == item.long_name)[0];\r\n          }\r\n          else{\r\n            newCity = { \r\n              id: this.cities.length+1, \r\n              name: item.long_name \r\n            };\r\n            this.cities.push(newCity); \r\n          }\r\n          this.submitForm.controls.address.get('city').setValue(newCity);    \r\n        } \r\n      });\r\n    }\r\n\r\n    if(newCity){\r\n      result.address_components.forEach(item =>{ \r\n        if(item.types.indexOf('neighborhood') > -1){ \r\n          let neighborhood = this.neighborhoods.filter(n => n.name == item.long_name && n.cityId == newCity.id)[0];\r\n          if(neighborhood){\r\n            newNeighborhood = neighborhood;\r\n          }\r\n          else{\r\n            newNeighborhood = { \r\n              id: this.neighborhoods.length+1, \r\n              name: item.long_name, \r\n              cityId: newCity.id \r\n            };\r\n            this.neighborhoods.push(newNeighborhood);\r\n          }\r\n          this.neighborhoods = [...this.neighborhoods];\r\n          this.submitForm.controls.address.get('neighborhood').setValue([newNeighborhood]); \r\n        }  \r\n      })\r\n    }\r\n\r\n    if(newCity){\r\n      result.address_components.forEach(item =>{            \r\n        if(item.types.indexOf('route') > -1){ \r\n          if(this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0]){\r\n            newStreet = this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0];\r\n          }\r\n          else{\r\n            newStreet = { \r\n              id: this.streets.length+1, \r\n              name: item.long_name, \r\n              cityId: newCity.id, \r\n              neighborhoodId: (newNeighborhood) ? newNeighborhood.id : null \r\n            };\r\n            this.streets.push(newStreet);\r\n          }          \r\n          this.streets = [...this.streets];\r\n          this.submitForm.controls.address.get('street').setValue([newStreet]); \r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n   \r\n  // -------------------- Additional ---------------------------  \r\n  public buildFeatures() {\r\n    const arr = this.features.map(feature => { \r\n      return this.fb.group({\r\n        id: feature.id,\r\n        name: feature.name,\r\n        selected: feature.selected\r\n      });\r\n    })   \r\n    return this.fb.array(arr);\r\n  }\r\n  \r\n\r\n  \r\n  // -------------------- Media --------------------------- \r\n  public createVideo(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null, \r\n      link: null \r\n    });\r\n  }\r\n  public addVideo(): void {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n    videos.push(this.createVideo());\r\n  }\r\n  public deleteVideo(index) {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n    videos.removeAt(index);\r\n  }\r\n  \r\n  public createPlan(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null, \r\n      desc: null,\r\n      area: null,\r\n      rooms: null,\r\n      baths: null,\r\n      image: null\r\n    });\r\n  }\r\n  public addPlan(): void {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n    plans.push(this.createPlan());\r\n  }\r\n  public deletePlan(index) {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n    plans.removeAt(index);\r\n  } \r\n\r\n\r\n  public createFeature(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null, \r\n      value: null \r\n    });\r\n  }\r\n  public addFeature(): void {\r\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n    features.push(this.createFeature());\r\n  }\r\n  public deleteFeature(index) {\r\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n    features.removeAt(index);\r\n  } \r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AgmCoreModule } from '@agm/core';  \r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { SubmitPropertyComponent } from './submit-property.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: SubmitPropertyComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [SubmitPropertyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    AgmCoreModule, \r\n    InputFileModule\r\n  ]\r\n})\r\nexport class SubmitPropertyModule { }\r\n"]}